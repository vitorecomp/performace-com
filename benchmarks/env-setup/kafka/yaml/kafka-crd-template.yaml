apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-cluster
  namespace: kafka
spec:
  cruiseControl:
    template:
      pod:
        metadata:
          labels:
            app: kafka-utils
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node/type
                      operator: In
                      values:
                        - kafka-utils
        tolerations:
        - effect: NoSchedule
          key: app
          operator: Equal
          value: kafka-utils
  entityOperator:
    template:
      pod:
        metadata:
          labels:
            app: kafka-utils
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node/type
                      operator: In
                      values:
                        - kafka-utils
        tolerations:
        - effect: NoSchedule
          key: app
          operator: Equal
          value: kafka-utils
    topicOperator: {}
    userOperator: {}
  kafka:
    config:
      default.replication.factor: 3
      inter.broker.protocol.version: '3.4'
      min.insync.replicas: 2
      offsets.topic.replication.factor: 3
      topic.creation.enable: false
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: 3
      log.retention.hours: 168
      log.segment.bytes: 1073741824
      log.retention.check.interval.ms: 300000
    jvmOptions:
      '-Xms': 6g
      '-Xmx': 10g
    listeners:
      - name: plain
        port: 9092
        tls: false
        type: internal
      - name: tls
        port: 9093
        tls: true
        type: internal
    replicas: 3
    storage:
      class: gp3-csi
      deleteClaim: true
      size: 100Gi
      type: persistent-claim
    version: 3.4.0
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
    template:
      pod:
        metadata:
          labels:
            app: kafka
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node/type
                      operator: In
                      values:
                        - kafka
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - kafka
                topologyKey: kubernetes.io/hostname
        tolerations:
          - effect: NoSchedule
            key: app
            operator: Equal
            value: kafka
  zookeeper:
    template:
      pod:
        metadata:
          labels:
            app: kafka-zookeeper
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node/type
                      operator: In
                      values:
                        - kafka
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - kafka-zookeeper
                topologyKey: kubernetes.io/hostname
        tolerations:
            - effect: NoSchedule
              key: app
              operator: Equal
              value: kafka
    replicas: 3
    storage:
      type: ephemeral
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yml
